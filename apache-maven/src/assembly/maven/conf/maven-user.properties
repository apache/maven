#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

#
# Maven user properties
#
# The properties defined in this file will be made available through
# user properties at the very beginning of Maven's boot process.
#

# Comma-separated list of files to include.
# Each item may be enclosed in quotes to gracefully include spaces. Items are trimmed before being loaded.
# If the first character of an item is a question mark, the load will silently fail if the file does not exist.
${includes} = ?"${maven.user.conf}/maven-user.properties", \
              ?"${maven.project.conf}/maven-user.properties"

#
# Maven Cache Configuration
#
# Controls caching behavior for different request types during Maven builds.
# Format: RequestType { scope:SCOPE ref:REFERENCE_TYPE }
#
# SCOPE OPTIONS:
#   session - Cache for entire Maven session (all modules in multi-module build)
#   request - Cache only for current request + its child requests
#   none    - Disable caching entirely
#
# REFERENCE OPTIONS:
#   hard - Strong reference (stays in memory, faster access)
#   soft - Weak reference (can be garbage collected under memory pressure)
#
# CONFIGURATION BREAKDOWN:
#   SourceCacheKey                   - File and RAW model requests (session/hard for consistent file access)
#   DefaultArtifactResolverRequest   - Artifact resolution results (session/hard to avoid re-resolving)
#   DefaultVersionResolverRequest    - Version resolution results (session/soft, less critical than artifacts)
#   RgavCacheKey                     - BOM import caching (session/soft, typically resolved once)
#   DefaultModelBuilderRequest       - Model building operations (none, ensures fresh dynamic builds)
#   *                                - Fallback for all other requests (request/soft for temporary child request caching)
#
maven.cache.config = \
    SourceCacheKey { scope:session ref:hard } \
    DefaultArtifactResolverRequest { scope:session ref:hard } \
    DefaultVersionResolverRequest { scope:session ref:soft } \
    RgavCacheKey { scope:session ref:soft } \
    DefaultModelBuilderRequest { scope:none } \
    * { scope:request ref:soft }
