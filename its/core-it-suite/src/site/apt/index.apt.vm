 -----
 Maven Core Integration Tests Suite
 -----
 Herv√© Boutemy
 -----
 2011-09-04
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Maven Core Integration Tests Suite

  This module provides the {{{./testapidocs/org/apache/maven/it/package-summary.html}effective Core Integration Tests suite}},
  starting with {{{./bootstrap.html}bootstrap}}.

* Running Core ITs Suite

  Follow the steps that are described in the {{{https://github.com/apache/maven-integration-testing/blob/master/README.md}README.md}} 
  of the official {{{https://github.com/apache/maven-integration-testing}Core ITs Suite}} repository.

* Core ITs Suite Results

  ITs results are displayed on the console and can be published in the site through Surefire Report.

+----
mvn -Preporting site
+----

  Currently deployed {{{./surefire-report.html}Surefire Report}} was generated with following environment:

%{snippet|file=${project.build.directory}/info.txt}


* Core ITs Suite and Dependencies (incl. Plugins)

 A good IT does not depend on external repos like Central, it uses dedicated test plugins and test repositories.
 The {{{https://github.com/apache/maven-integration-testing/blob/master/core-it-suite/src/test/resources-filtered/settings.xml}default <<<settings.xml>>>}}
 used by ITs helps to enforce this by pointing <<<central>>> at <<<file:target/null>>>,
 which obviously can't resolve anything. This setup using a file-based dummy repo also helps execution time,
 because this repo produces (expected) <<<404>>>s much faster than a HTTP-based repo.

 The one place where access to Central is desired is by adding artifacts to the
 {{{https://github.com/apache/maven-integration-testing/blob/master/core-it-suite/src/test/resources/bootstrap.txt}bootstrap.txt}} file,
 which is used to prime the local repo with any artifacts the ITs will need.  This file should be kept sorted alphabetically for ease of use.

 So some care needs to be taken when introducing new dependencies into the ITs themselves or {{{../core-it-support/}the support plugins}}.
 Many times the failures that we encounter are discrepancies between actual artifact consumption required and
 what is populated during bootstrapping. When forgetting, typical failures (as seen in ASF CI) will give following traces in log:

-------
[ERROR] testit(org.apache.maven.it.MavenITmng...)  Time elapsed: 0.145 s  <<< ERROR!
...
[ERROR] Failed to execute goal ... (...) on project ...: ... Could not find artifact ... in central (file:target/null) -> [Help 1]
-------

** Using Local Repository Manager

 If you are using a local repository manager, configured in your <<<~/.m2/settings.xml>>> as a mirror of <<<central>>>, it will invalidate previous setup:
 working Core ITs Suite can work on your laptop but fail on ASF CI because of missing artifact.

 Comment out your mirror configuration to enable the expected local failure, then be able to debug and fix the issue.
